import random
import asyncio
import aiohttp
import json
from testing_method import *
import discord
from discord import Game
from discord.ext.commands import Bot

BOT_PREFIX = ("n!")
TOKEN = "NTAwOTYwMjc3NjY0MzY2NjAy.DqSjwg.KHvktaWimh2TK06MWcHyQq2hLy0"
BOT_CHANNEL_ID = "503919801169870849"
LFG_CHANNEL_ID = "501020750115766282"
authorized_user = set()

client = Bot(command_prefix=BOT_PREFIX, pm_help=True)
client.remove_command('help')



@client.command(pass_context = True)
async def help(ctx):
    commands = dict()
    commands['`n!cr [Session ID] [Voice channel] ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢...`'] = '‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏´‡∏≤‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ô‡πÄ‡∏•‡πà‡∏ô (‡πÄ‡∏ß‡∏•‡∏≤‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏£‡∏¥‡∏á‡πÜ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ [] ‡∏ô‡∏∞ ‡πÅ‡∏ï‡πà‡∏ß‡πà‡∏≤‡∏ï‡∏£‡∏á‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ "..." ‡∏Ñ‡∏£‡∏≠‡∏ö'
    commands['`n!setchannel [lfg ‡∏´‡∏£‡∏∑‡∏≠ bot] [Channel ID]`'] = 'Set Channel ‡πÑ‡∏ß‡πâ‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏®‡πÉ‡∏™‡πà'
    commands['`n!authorize [+ ‡∏´‡∏£‡∏∑‡∏≠ -]`'] = '‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå `n!authorize +`'
    msg = discord.Embed(title='Nergigante',
                        description="Written by darkenstardragon#2672",
                        color=0x0000ff)
    for command, description in commands.items():
        msg.add_field(name=command, value=description, inline=False)
    await client.send_message(ctx.message.channel, embed=msg)

@client.command(pass_context = True)
async def square(context, number):
    squared_val = int(number) * int(number)
    await client.say(context.message.author.mention + " " + str(number) + "'s square is " + str(squared_val))

@client.event
async def on_ready():
    await client.change_presence(game = Game(name = "with Darken"))
    print("Logged in as " + client.user.name)

@client.command(pass_context = True)
async def test(ctx):
    await client.send_message(ctx.message.channel, "Hello! " + ctx.message.author.mention)

@client.command(pass_context = True)
async def cr(ctx, *args):
    global LFG_CHANNEL_ID
    global authorized_user
    ls_msg = []
    if ctx.message.author in authorized_user:
        await client.send_message(ctx.message.channel, '‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏µ‡πÇ‡∏û‡∏™‡∏ï‡πå LFG ‡πÉ‡∏ô <#%s> ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏ô‡∏∞! ‡∏•‡∏ö‡∏≠‡∏±‡∏ô‡πÄ‡∏Å‡πà‡∏≤‡∏≠‡∏≠‡∏Å‡∏Å‡πà‡∏≠‡∏ô‡∏ã‡∏∞‡∏ñ‡πâ‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏≠‡∏¢‡∏≤‡∏Å‡∏à‡∏∞‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÉ‡∏´‡∏°‡πà'.format(ctx.message) % LFG_CHANNEL_ID)
        return
    '''
    if len(args) == 0:
        await client.send_message(ctx.message.channel, "‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {0.author.mention} ... ‡πÄ‡∏à‡πâ‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏à‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏û‡∏™‡∏ï‡πå LFG ‡∏Å‡πà‡∏≠‡∏ô‡∏≠‡∏∑‡πà‡∏ô‡∏Å‡πá‡∏ö‡∏≠‡∏Å **Session ID** ‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏°‡∏≤‡∏Å‡πà‡∏≠‡∏ô‡∏™‡∏¥ \n \
        ‡πÅ‡∏ï‡πà‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡∏™‡∏£‡πâ‡∏≤‡∏á LFG ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏ó‡∏û‡πå `stop` ‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢".format(ctx.message))
        msg = client.wait_for_message(timeout=60, author=ctx.message.author)
        if msg == "stop": return
        ls_msg.append(msg)

        await client.send_message(ctx.message.channel,"{0.author.mention} ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°! **Session ID** ‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏Ñ‡∏∑‡∏≠ **%s** ‡∏™‡∏¥‡∏ô‡∏∞ \n ‡∏ï\‡πà‡∏≠‡πÑ‡∏õ‡∏Å‡πá‡∏ö‡∏≠‡∏Å‡∏Ç‡πâ‡∏≤‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏™‡∏¥‡∏ß‡πà‡∏≤‡πÄ‡∏à‡πâ‡∏≤‡∏à‡∏∞‡πÉ‡∏ä‡πâ **Voice Channel** ‡∏´‡πâ‡∏≠‡∏á‡πÑ‡∏´‡∏ô ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πâ ‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå - ‡∏°‡∏≤‡πÄ‡∏â‡∏¢‡πÜ".format(ctx.message) % msg.content)
        msg = client.wait_for_message(timeout=60, author=ctx.message.author)
        if msg == "stop": return
        ls_msg.append(msg)

        await client.send_message(ctx.message.channel, "{0.author.mention} ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß **‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢**‡∏°‡∏≤‡∏´‡∏ô‡πà‡∏≠‡∏¢‡∏ß‡πà‡∏≤‡∏õ‡∏≤‡∏£‡πå‡∏ï‡∏µ‡πâ‡πÄ‡∏à‡πâ‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£ ‡∏•‡πà‡∏≤‡∏ï‡∏±‡∏ß‡∏≠‡∏∞‡πÑ‡∏£ ‡∏´‡∏≤‡∏Ç‡∏≠‡∏á‡∏≠‡∏∞‡πÑ‡∏£ ‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡πà‡∏ß‡∏¢‡πÄ‡∏´‡∏•‡∏∑‡∏≠ ‡∏Å‡πá‡∏ß‡πà‡∏≤‡∏°‡∏≤‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢!".format(ctx.message))
        msg = client.wait_for_message(timeout=60, author=ctx.message.author)
        if msg == "stop": return
        ls_msg.append(msg)
    '''

    if len(args) >= 3 or len(ls_msg) >= 3:
        if len(ls_msg) < 3: ls_msg = [e for e in args]
        (sessionID, voice_channel) = ls_msg[:2]
        description = " ".join(ls_msg[2:])
        await client.send_message(ctx.message.channel,'‡∏™‡∏ß‡∏±‡∏™‡∏î‡∏µ {0.author.mention} ... ‡∏Ç‡πâ‡∏≤‡∏™‡∏£‡πâ‡∏≤‡∏á LFG ‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡πÑ‡∏ß‡πâ‡∏ó‡∏µ‡πà <#%s> ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß \n**!!!‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÇ‡∏î‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏•‡∏¥‡∏Å \U0001F5D1 ‡∏ö‡∏ô‡πÇ‡∏û‡∏™‡∏ï‡πå‡∏Ç‡∏≠‡∏á‡πÄ‡∏à‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏™‡∏£‡πá‡∏à‡∏î‡πâ‡∏ß‡∏¢!!!**'.format(ctx.message) % LFG_CHANNEL_ID)
        userID = ctx.message.server.get_member(ctx.message.author.id)
        embed = embedCreate(str(ctx.message.author.mention), getUrl(userID), sessionID, description, voice_channel)
        await client.send_message(discord.Object(id=LFG_CHANNEL_ID), embed=embed)

        messages = []
        async for msg in client.logs_from(discord.Object(id=LFG_CHANNEL_ID), limit=50):
            messages.append(msg)
            break
        for msg in messages:
            # await client.add_reaction(msg, emoji="üîÅ")
            await client.add_reaction(msg, emoji='\U0001F5D1')
            authorized_user.add(ctx.message.author)
    else: await client.send_message(ctx.message.channel, "‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô `n!cr [Session ID] [Voice channel] ‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢...` ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞!")

@client.command(pass_context = True)
async def authorize(ctx, type):
    global authorized_user
    if type == "+":
        if ctx.message.author not in authorized_user:
            authorized_user.add(ctx.message.author)
        else:
            await client.send_message(ctx.message.channel, '{0.author.mention is already exist in authorized_user}'.format(ctx.message))
    elif type == "-":
        if ctx.message.author in authorized_user:
            authorized_user.remove(ctx.message.author)
        else:
            await client.send_message(ctx.message.channel,'{0.author.mention is not yet exist in authorized_user}'.format(ctx.message))
    else:
        await client.send_message(ctx.message.channel,'‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö `n!authorize [+ or -]` ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞!'.format(ctx.message))

@client.command(pass_context = True)
async def setchannel(ctx, type, channelID):
    global LFG_CHANNEL_ID
    global BOT_CHANNEL_ID
    if type == "lfg":
        LFG_CHANNEL_ID = channelID
        await client.send_message(ctx.message.channel,"‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏Ç‡πâ‡∏≤‡∏à‡∏∞‡πÇ‡∏û‡∏™‡∏ï‡πå LFG ‡∏•‡∏á‡∏ó‡∏µ‡πà <#%s> ‡∏•‡πà‡∏∞‡∏ô‡∏∞!".format(ctx.message) % LFG_CHANNEL_ID)
    elif type == "bot":
        BOT_CHANNEL_ID = channelID
        await client.send_message(ctx.message.channel,"‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ‡∏Ç‡πâ‡∏≤‡∏à‡∏∞‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤ <#%s> ‡πÄ‡∏õ‡πá‡∏ô channel ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≤‡∏•‡πà‡∏∞‡∏ô‡∏∞!".format(ctx.message) % BOT_CHANNEL_ID)
    else:
        await client.send_message(ctx.message.channel, "‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏à‡∏∞‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö `n!setchannel [lfg ‡∏´‡∏£‡∏∑‡∏≠ bot] [channelID]` ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô‡∏ô‡∏∞! " + user.mention)

@client.event
async def on_reaction_add(reaction, user):
    global authorized_user
    if reaction.emoji == '\U0001F5D1' and user != client.user and user in authorized_user:
        await client.send_message(discord.Object(id=BOT_CHANNEL_ID), "‡∏•‡∏ö‡πÇ‡∏û‡∏™‡∏ï‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢! " + user.mention)
        await client.delete_message(reaction.message)
        await client.send_message(reaction.message.channel, reaction.message.timestamp)
        reaction.message.embeds
        authorized_user.remove(user)
    if reaction.emoji == '\U0001F501' and user != client.user:
        await client.send_message(reaction.message.channel, "repeat!")

def embedCreate(username, link, sessionID, description, voice_channel):
    colors = [0xFF0000,0x00FF00,0x0000FF,0xFFFF00,0xFF00FF,0x00FFFF]
    embed = discord.Embed(title="```" + description + "```",description=username, color=random.choice(colors))
    embed.set_thumbnail(url=link)
    embed.add_field(name="sessionID", value=sessionID, inline=False)
    embed.add_field(name="Voice Channel: ", value=voice_channel, inline=False)
    return embed

def getUrl(user):
    if not user:
        return  # Can't find the user, then quit
    return user.avatar_url



# client.loop.create_task(list_servers())
client.run(TOKEN)
